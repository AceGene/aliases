#!/bin/bash
######### This file is sourced via the aliases-init script
is_git_dirty() { if [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]]; then return 1; else return 0; fi } # unused
alias gitdirty='is_git_dirty; if [ $? -eq 1 ]; then echo 1; else echo 0; fi' # unused
cd_parent_aliases() { local ALS='.'; local DIR; for VAR in {1..10} ; do ALS="${ALS}."; DIR="${DIR}../"; alias "${ALS}"'=cd '"${DIR}"; done }
######### git  #########
alias gg='git status -sb'
alias gc='git checkout'
alias gcm='git checkout master'
alias gp='git pull'
alias gcp='git cherry-pick'
alias gcmp='git checkout master && git pull'
alias grm='git fetch && git rebase origin/master'
alias ggg='git submodule foreach git status -sb'
alias gsu='git submodule update'
alias gss='git submodule status'
alias lg='git log --date=format:"%d-%m-%Y %H:%M" --pretty=format:"%h%x20%x20%Cred%ad%x20%x20%Cblue%an%x20%x20%Creset%s"'
alias log='git log --graph --abbrev-commit --decorate --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)"'
######### ide  #########
alias vs='code .'
######### misc #########
alias op='xdg-open'
alias rc='xdg-open ~/.bashrc'
alias rca='xdg-open ~/.bash_aliases'
alias rcg='xdg-open ~/gene-ws/aliases/aliases-source' # TODO: undo relative path to ws
alias rcs='source ~/.bashrc'
alias rcas='source ~/.bash_aliases'
alias rcgs='source ~/gene-ws/aliases/aliases-source'
alias sudo='sudo ' # purpose is to allow 'sudo <alias>'
alias ch='chmod 755'
alias rs='reset'
######### dirs #########
alias dl='cd ~/Downloads'
alias dsk='cd ~/Desktop'
alias doc='cd ~/Documents'
alias ~='cd ~'
cd_parent_aliases
#### Completion Aid # TODO make this less of a relative path. Return error if doesnt exist
git-completion-source(){
	local DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
	local git_completion_dir=$(find "$(dirname "$DIR")"/third-party/ -name git-completion[.^]bash)
	if [ -f "$git_completion_dir" ]; then
	  . "$git_completion_dir"
	  __git_complete gp _git_pull
	  __git_complete gc _git_checkout
	  __git_complete gcp _git_cherry_pick
	  __git_complete git _git
	fi
}

#git-completion-source # TODO: investigate git completion problems
