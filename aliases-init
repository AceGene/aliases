#!/bin/bash
#
# description: adds line to source alias-source bash_aliases

__parse_script_arguments() {
    while (( "${#}" )); do
        case "${1}" in
            --operating-system|--os)
				[ "${2}" != 'linux' ] && [ "${2}" != 'windows' ] && [ "${2}" != 'wsl' ] && echo "ERROR: unrecognized ${1} parameter ${2}" && return 1
                operating_sys="${2}"
                shift
				;;
            *)
                echo "ERROR: arg ${1} is unexpected" && return 2
                ;;
        esac
        shift
    done
}

_aliases_init () {
	## default values
	local operating_sys=''
    ## fill script vars with cmd line args and/or default values where applicable
    __parse_script_arguments "${@}" || return "1${?}"
	## create arg lists for source script
	local args="--os ${operating_sys}"
	## hardcoded values
	local script_path="${BASH_SOURCE[0]}"
	local script_dir="$(cd "$(dirname "${script_path}")"; pwd -P)"
	local aliases_src='aliases-source'
	local line='[ -f '"${script_dir}/${aliases_src}"' ] && source '"${script_dir}/${aliases_src} ${args}"
	local bashrc="${HOME}/.bashrc"
	local bash_aliases="${HOME}/.bash_aliases"
	#### add line to $bash_aliases if needed to source $aliases_src
	[ ! -f "${bashrc}" ] && { echo "NOTE: ${bashrc} does not exist, creating..."; touch "${bashrc}" && echo "source ${bash_aliases}" > "${bashrc}"; }
	[ ! -f "${bash_aliases}" ] && echo "NOTE: ${bash_aliases}" does not exist, creating... && touch "${bash_aliases}"
	grep -qF -- "${line}" "${bash_aliases}" || (echo >> "${bash_aliases}" && echo "${line}" >> "${bash_aliases}" && echo "NOTE: ${aliases_src}" added to "${bash_aliases}") || return 1
}

_aliases_init "${@}" || exit "${?}"